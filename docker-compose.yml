services:
  instashop:
    build:
      context: .
      dockerfile: Dockerfile
    # deploy:
    #   resources:
    #     limits:
    #       memory: 2g
    #     reservations:
          # memory: 1g
    develop:
      watch:
        - path: .
          target: /app
          action: sync
        - path: go.mod
          target: /app/go.mod
          action: rebuild
        - path: go.sum
          target: /app/go.sum
          action: rebuild
    ports:
      - "8019:8019"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - app.env
    
  postgres:
    image: postgres:13-alpine
    env_file:
      - app.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  redis:
    image: redis:6-alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    env_file:
      - app.env
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
